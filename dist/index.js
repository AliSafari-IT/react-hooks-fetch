var r=require("react"),t=require("react-suspense-fetch");exports.ErrorBoundary=function(r){var t,e;function n(){var t;return(t=r.apply(this,arguments)||this).state={error:null},t.retry=function(){t.setState({error:null})},t}return e=r,(t=n).prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e,n.getDerivedStateFromError=function(r){return{error:r}},n.prototype.render=function(){var r=this.state.error,t=this.props,e=t.children,n=t.fallback;return r?"function"==typeof n?n(r,this.retry):n:e},n}(r.Component),exports.createUseFetch=function(e,n){var o=t.prefetch(e,n);return function(){var n=r.useState(o),u=n[1];return{result:n[0],refetch:r.useCallback((function(r){u(t.prefetch(e,r))}),[])}}},exports.createUseFetchWithoutPrefetch=function(e){return function(n){var o=r.useState(null),u=o[0],c=o[1];return r.useEffect((function(){void 0!==n&&c(t.prefetch(e,n))}),[n]),{result:u,refetch:r.useCallback((function(r){c(t.prefetch(e,r))}),[])}}};
//# sourceMappingURL=index.js.map
