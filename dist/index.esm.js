import{Component as r,useRef as t,useState as e,useCallback as o,useEffect as n}from"react";import{refetch as u,prefetch as c}from"react-suspense-fetch";export{prefetch}from"react-suspense-fetch";var f=function(r){var t,e;function o(){var t;return(t=r.apply(this,arguments)||this).state={error:null},t.retry=function(){t.setState({error:null})},t}return e=r,(t=o).prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e,o.getDerivedStateFromError=function(r){return{error:r}},o.prototype.render=function(){var r=this.state.error,t=this.props,e=t.children,o=t.fallback;return r?"function"==typeof o?o(r,this.retry):o:e},o}(r),i=function(r){if(r!==t(r).current)throw new Error("suspendable has to be prefetched outside render");var n=e(r),c=n[1];return{result:n[0],refetch:o(function(t){c(u(r,t))},[r])}},s=function(r,u){if(r!==t(r).current)throw new Error("fetchFunc has to be defined outside render");var f=e(null),i=f[0],s=f[1];return n(function(){void 0!==u&&s(c(r,u))},[r,u]),{result:i,refetch:o(function(t){s(c(r,t))},[r])}};export{f as ErrorBoundary,i as useFetch,s as useFetchWithoutPrefetch};
//# sourceMappingURL=index.esm.js.map
