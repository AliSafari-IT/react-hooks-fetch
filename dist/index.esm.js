import{Component as r,useState as t,useCallback as e,useEffect as n}from"react";import{prefetch as o}from"react-suspense-fetch";var u=function(r){var t,e;function n(){var t;return(t=r.apply(this,arguments)||this).state={error:null},t.retry=function(){t.setState({error:null})},t}return e=r,(t=n).prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e,n.getDerivedStateFromError=function(r){return{error:r}},n.prototype.render=function(){var r=this.state.error,t=this.props,e=t.children,n=t.fallback;return r?"function"==typeof n?n(r,this.retry):n:e},n}(r),c=function(r,n){var u=o(r,n);return function(){var n=t((function(){return function(r,t){if(!r)throw new Error("prefetched is cleared")}(null!==u),u})),c=n[1];return{result:n[0],refetch:e((function(t){c(o(r,t))}),[]),clearPrefetched:e((function(){u=null}),[])}}},i=function(r){return function(u){var c=t(null),i=c[0],f=c[1];return n((function(){void 0!==u&&f(o(r,u))}),[u]),{result:i,refetch:e((function(t){f(o(r,t))}),[])}}};export{u as ErrorBoundary,c as createUseFetch,i as createUseFetchWithoutPrefetch};
//# sourceMappingURL=index.esm.js.map
