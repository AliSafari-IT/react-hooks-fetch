{"version":3,"file":"index.esm.js","sources":["../src/ErrorBoundary.ts","../src/createUseFetch.ts"],"sourcesContent":["import { Component, ReactNode } from 'react';\n\ntype Fallback = ReactNode | ((error?: Error, retry?: () => void) => ReactNode);\n\ntype Props = {\n  fallback: Fallback;\n};\n\ntype State = {\n  error: Error | null;\n};\n\nexport class ErrorBoundary extends Component<Props, State> {\n  state = { error: null } as State;\n\n  static getDerivedStateFromError(error: Error) {\n    return { error };\n  }\n\n  retry = () => { this.setState({ error: null }); };\n\n  render() {\n    const { error } = this.state;\n    const { children, fallback } = this.props;\n    if (error) {\n      if (typeof fallback === 'function') {\n        return fallback(error, this.retry);\n      }\n      return fallback;\n    }\n    return children;\n  }\n}\n","/* eslint arrow-parens: off */ // FIXME why does it complain?\n\nimport { useCallback, useState } from 'react';\nimport { prefetch } from 'react-suspense-fetch';\n\ntype FetchFunc<Result, Input> = (input: Input) => Promise<Result>;\n\nexport const createUseFetch = <Result extends object, Input>(\n  fetchFunc: FetchFunc<Result, Input>,\n  initialInput: Input,\n) => {\n  const initialResult = prefetch(fetchFunc, initialInput);\n  const useFetch = () => {\n    const [result, setResult] = useState(initialResult);\n    const refetch = useCallback((input) => {\n      setResult(prefetch(fetchFunc, input));\n    }, []);\n    return { result, refetch };\n  };\n  return useFetch;\n};\n\nexport const createUseFetchWithoutPrefetch = <Result extends object, Input>(\n  fetchFunc: FetchFunc<Result, Input>,\n) => {\n  const useFetch = () => {\n    const [result, setResult] = useState<Result | null>(null);\n    const refetch = useCallback((input) => {\n      setResult(prefetch(fetchFunc, input));\n    }, []);\n    return { result, refetch };\n  };\n  return useFetch;\n};\n"],"names":["ErrorBoundary","error","_this","setState","getDerivedStateFromError","render","this","state","props","children","fallback","retry","Component","createUseFetch","fetchFunc","initialInput","initialResult","prefetch","useState","setResult","result","refetch","useCallback","input","createUseFetchWithoutPrefetch"],"mappings":"iHAYaA,IAAAA,sBAAb,iEACU,CAAEC,MAAO,MAMjBC,QAAQ,WAAQA,EAAKC,SAAS,CAAEF,MAAO,wGAPzCD,EAGSI,yBAAP,SAAgCH,GAC9B,MAAO,CAAEA,MAAAA,gBAKXI,OAAA,eACUJ,EAAUK,KAAKC,MAAfN,QACuBK,KAAKE,MAA5BC,IAAAA,SAAUC,IAAAA,SAClB,OAAIT,EACsB,mBAAbS,EACFA,EAAST,EAAOK,KAAKK,OAEvBD,EAEFD,MAlBwBG,GCLtBC,EAAiB,SAC5BC,EACAC,GAEA,IAAMC,EAAgBC,EAASH,EAAWC,GAQ1C,OAPiB,iBACaG,EAASF,GAAtBG,OAIf,MAAO,CAAEC,YAAQC,QAHDC,GAAY,SAACC,GAC3BJ,EAAUF,EAASH,EAAWS,MAC7B,OAMMC,EAAgC,SAC3CV,GASA,OAPiB,iBACaI,EAAwB,MAArCC,OAIf,MAAO,CAAEC,YAAQC,QAHDC,GAAY,SAACC,GAC3BJ,EAAUF,EAASH,EAAWS,MAC7B"}